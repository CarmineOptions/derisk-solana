name: CI/CD Pipeline

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    container: python:3.10-slim
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python3 -V
          python -m venv venv-solana
          source venv-solana/bin/activate
          pip install poetry
          poetry install --no-root
          pip3 list
        shell: bash

      - name: Run tests
        run: |
          source venv-solana/bin/activate
          PYTHONPATH=$PWD pytest tests/ -vv
        shell: bash

  mypy-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all the commits for comparison to define what files did change

      - name: Install dependencies
        run: |
          python3 -V
          python -m venv venv-solana
          source venv-solana/bin/activate
          pip install poetry
          poetry install --no-root
          pip3 list
        shell: bash

      - name: Find changed files
        id: files
        run: |
          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          git fetch origin master:master  # Ensure the master branch is up to date
          git diff --name-only origin/master...HEAD | grep '\.py$' || echo "No changes in Python files"
          echo "EOF" >> $GITHUB_ENV
        shell: bash

      - name: Run mypy
        if: env.CHANGED_FILES != ''
        run: |
          source venv/bin/activate
          mypy ${{ env.CHANGED_FILES }}
        shell: bash

  pylint-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all the commits for comparison to define what files did change

      - name: Install dependencies
        run: |
          python3 -V
          python -m venv venv-solana
          source venv-solana/bin/activate
          pip install poetry
          poetry install --no-root
          pip3 list
        shell: bash

      - name: Find changed files
        id: files
        run: |
          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          git fetch origin master:master  # Ensure the master branch is up to date
          git diff --name-only origin/master...HEAD | grep '\.py$' || echo "No changes in Python files"
          echo "EOF" >> $GITHUB_ENV
        shell: bash

      - name: Run pylint
        if: env.CHANGED_FILES != ''
        run: |
          source venv/bin/activate
          pylint ${{ env.CHANGED_FILES }}
        shell: bash
